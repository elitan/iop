---
description: 
globs: 
alwaysApply: false
---
# TypeScript Coding Conventions

## Function Declarations

**Always prefer function declarations over arrow function assignments:**

```typescript
// ✅ Preferred
function deployToServer(config: DeployConfig) {
  // implementation
}

// ❌ Avoid
const deployToServer = (config: DeployConfig) => {
  // implementation
}
```


## Error Handling

Follow the established pattern in [src/commands/deploy.ts](mdc:src/commands/deploy.ts) and other command files:

- Use try-catch blocks for async operations
- Log errors with descriptive messages
- Exit with appropriate status codes
- Use console.error for error output

## CLI Patterns

Follow the command structure established in [src/index.ts](mdc:src/index.ts):

- Parse flags and arguments consistently
- Implement verbose flag support
- Provide helpful usage messages
- Handle unknown commands gracefully

## Type Safety

- Use Zod for runtime type validation (see project dependencies)
- Define proper TypeScript interfaces
- Avoid `any` types
- Use proper error types for SSH and deployment operations
