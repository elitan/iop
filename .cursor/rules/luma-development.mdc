---
description: 
globs: 
alwaysApply: true
---
# Luma Development Guidelines

## Project Structure

Luma follows a modular structure with clear separation of concerns:

- `main.go` - Application entry point and server initialization
- `api/` - API endpoints for managing projects
- `manager/` - Core business logic for container and state management
- `proxy/` - HTTP reverse proxy that routes requests to containers
- `types/` - Core data models and interfaces

## Development Workflow

1. Run the application using: `go run main.go`
2. The servers will start on:
   - Port 8080 for the proxy server (handling project requests)
   - Port 8081 for the API server (managing project configuration)

## Adding Features

When adding new features:

1. Define any new types in `types/`
2. Implement business logic in appropriate `manager/` components
3. Update API handlers in `api/` if adding new endpoints
4. Modify the proxy in `proxy/` for request handling changes
5. Add appropriate tests, referencing existing patterns in `*_test.go` files

## Coding Standards

- Use Go idiomatic patterns
- Write descriptive comments for public functions
- Add unit tests for new functionality
- Follow existing error handling patterns
