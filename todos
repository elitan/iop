# Luma Project Todos

## Deploy
Deploy command functionality:
  - Processes command arguments like `--force` (bypass git checks) and `--services` (deploy services instead of apps)
  - Checks for uncommitted Git changes (unless `--force` is used)
  - Loads Luma configuration and secrets
  - Identifies target entries (apps or services) to deploy based on provided names or defaults to all
  - Generates a unique release ID for versioning app deployments
  - Verifies project-specific Docker networks exist on target servers (should have been created by setup command)
    - Exit early if network doesn't exist, rather than creating it
  - Verifies luma-proxy container is running on target servers
    - Exit early if luma-proxy is not running and prompt user to run `luma setup`
  - For applications:
      - Builds or tags Docker images locally
      - Pushes images to configured registry
      - Deploys to each target server via SSH
      - Handles registry authentication on remote servers
      - Creates containers with proper networking, volumes, and environment variables
      - Performs health checks via /up endpoint and Docker health checks
      - Configures luma-proxy for apps with proxy configuration
        - Runs `luma-proxy deploy --host [host] --target [app-name]:[app_port] --project [project-name]` inside luma-proxy container
      - Cleans up old application containers after successful deployment
  - For services:
      - Pulls service images on target servers
      - Handles registry authentication
      - Replaces existing service containers (stop, remove, create new)
      - Sets up proper networking, volumes, and environment variables
  - Prunes Docker resources on remote servers after deployment
